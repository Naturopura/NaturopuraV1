'use client'
// import type { Metadata } from "next";
import localFont from "next/font/local";
import { RainbowKitProvider } from '@rainbow-me/rainbowkit';
import { SessionProvider } from 'next-auth/react';
import { RainbowKitSiweNextAuthProvider } from '@rainbow-me/rainbowkit-siwe-next-auth';
import "./globals.css";
import { MeshProvider } from "@meshsdk/react";
import ProtectedRoute from "@/auth/ProtectedRoute";
import dynamic from "next/dynamic";
import { Toaster } from "react-hot-toast";
// import ReduxProvider from "@/store/redux-provider";
// import { wrapper } from "./redux";
// import ClientProvider from "./ClientProvider";
import '@rainbow-me/rainbowkit/styles.css';
import {
  getDefaultConfig, lightTheme
} from '@rainbow-me/rainbowkit';
import { WagmiProvider, http } from 'wagmi';
import {
  mainnet,
  polygon,
  optimism,
  arbitrum,
  base,
} from 'wagmi/chains';
import {
  QueryClientProvider,
  QueryClient,
} from "@tanstack/react-query";


const config = getDefaultConfig({
  appName: 'RainbowKit demo',
  projectId: 'YOUR_PROJECT_ID',
  chains: [mainnet],
  transports: {
    [mainnet.id]: http(),
  },
})

const queryClient = new QueryClient()

const ReduxProvider = dynamic(() => import("@/store/redux-provider"), {
  ssr: false,
});

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ReduxProvider>
          <ProtectedRoute>
            <WagmiProvider config={config}>
              <QueryClientProvider client={queryClient} >
                <RainbowKitProvider theme={lightTheme({
                  accentColor: '#acb631',
                  accentColorForeground: 'white',
                  borderRadius: 'medium',
                  fontStack: 'system',
                })}>
                  {/* <MeshProvider> */}
                  <Toaster position="top-center" />
                  {children}
                  {/* </MeshProvider> */}
                </RainbowKitProvider>
              </QueryClientProvider>
            </WagmiProvider>
          </ProtectedRoute>
        </ReduxProvider>
      </body>
    </html>
  );
}
